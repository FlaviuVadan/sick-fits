{"version":3,"file":"static/webpack/static/development/pages/orders.js.16bea12bc4609564a7b5.hot-update.js","sources":["webpack:///./queries/queries.js"],"sourcesContent":["import gql from 'graphql-tag';\n\nimport { perPage } from '../config';\n\nexport const ALL_ITEMS_QUERY = gql`\n    query ALL_ITEMS_QUERY(\n    $skip: Int = 0\n    $first: Int = ${ perPage }\n    ) {\n        items(\n            orderBy: createdAt_DESC\n            skip: $skip\n            first: $first\n        ) {\n            id\n            title\n            price\n            description\n            image\n            largeImage\n        }\n    }\n`;\n\nexport const CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int!\n    $image: String\n    $largeImage: String\n    ) {\n        createItem(\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    }\n`;\n\nexport const UPDATE_ITEM_MUTATION = gql`\n    mutation UPDATE_ITEM_MUTATION(\n    $id: ID!\n    $title: String\n    $description: String\n    $price: Int\n    ) {\n        updateItem(\n            id: $id\n            title: $title\n            description: $description\n            price: $price\n        ) {\n            id\n            title\n            description\n            price\n        }\n    }\n`;\n\nexport const ITEM_QUERY = gql`\n    query ITEM_QUERY(\n    $id: ID!\n    ) {\n        item(where: {\n            id: $id\n        }) {\n            id\n            title\n            description\n            price\n            largeImage\n        }\n    }\n`;\n\nexport const DELETE_ITEM_MUTATION = gql`\n    mutation DELETE_ITEM_MUTATION(\n    $id: ID!\n    ) {\n        deleteItem(\n            id: $id\n        ) {\n            id\n        }\n    }\n`;\n\nexport const PAGINATION_QUERY = gql`\n    query PAGINATION_QUERY {\n        itemsConnection {\n            aggregate {\n                count\n            }\n        }\n    }\n`;\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n    ) {\n        signup(\n            email: $email\n            name: $name\n            password: $password\n        ) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nexport const SIGNIN_MUTATION = gql`\n    mutation SIGNIN_MUTATION(\n    $email: String!\n    $password: String!\n    ) {\n        signin(\n            email: $email\n            password: $password\n        ) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nexport const CURRENT_USER_QUERY = gql`\n    query CURRENT_USER_QUERY {\n        currentUser {\n            id\n            email\n            name\n            permissions\n\t\t\torders {\n\t\t\t\tid\n\t\t\t}\n            cart {\n                id\n                quantity\n                item {\n                    id\n                    price\n                    image\n                    title\n                    description\n                }\n            }\n        }\n    }\n`;\n\nexport const SIGNOUT_MUTATION = gql`\n    mutation SIGNOUT_MUTATION {\n        signout {\n            message\n        }\n    }\n`;\n\nexport const RESET_PASSWORD_MUTATION = gql`\n    mutation RESET_PASSWORD_MUTATION(\n    $password: String!\n    $confirmPassword: String!\n    $resetToken: String!\n    ) {\n        resetPassword(\n            password: $password\n            confirmPassword: $confirmPassword\n            resetToken: $resetToken\n        ) {\n            id\n            email\n            name\n        }\n    }\n`;\n\nexport const REQUEST_RESET_MUTATION = gql`\n    mutation REQUEST_RESET_MUTATION(\n    $email: String!\n    ) {\n        requestReset(\n            email: $email\n        ) {\n            message\n        }\n    }\n`;\n\nexport const ALL_USERS_QUERY = gql`\n    query ALL_USERS_QUERY {\n        users {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\nexport const UPDATE_PERMISSIONS_MUTATION = gql`\n    mutation UPDATE_PERMISSIONS_MUTATION(\n    $permissions: [Permission]\n    $userId: ID!\n    ) {\n        updatePermissions(\n            permissions: $permissions\n            userId: $userId\n        ) {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;\n\n// @client tells Apollo to not go to the GraphQL client or the server but check the client state for cartOpen\nexport const LOCAL_STATE_QUERY = gql`\n    query LOCAL_STATE_QUERY {\n        cartOpen @client\n    }\n`;\n\nexport const TOGGLE_CART_MUTATION = gql`\n    mutation TOGGLE_CART_MUTATION {\n        toggleCart @client\n    }\n`;\n\nexport const ADD_TO_CART_MUTATION = gql`\n    mutation ADD_TO_CART_MUTATION(\n    $id: ID!\n    ) {\n        addToCart(\n            id: $id\n        ) {\n            id\n            quantity\n        }\n    }\n`;\n\nexport const REMOVE_FROM_CART_MUTATION = gql`\n    mutation REMOVE_FROM_CART_MUTATION(\n    $id: ID!\n    ) {\n        removeFromCart(\n            id: $id\n        ) {\n            id\n        }\n    }\n`;\n\nexport const SEARCH_ITEMS_QUERY = gql`\n    query SEARCH_ITEMS_QUERY(\n    $searchTerm: String!\n    ) {\n        items(\n            where: {\n                OR: [\n                    { title_contains: $searchTerm },\n                    { description_contains: $searchTerm },\n                ],\n\n            }\n        ) {\n\t\t\tid\n\t\t\timage\n\t\t\ttitle\n\t\t}\n    }\n`;\n\nexport const CREATE_ORDER_MUTATION = gql`\n\tmutation CREATE_ORDER_MUTATION(\n\t\t$token: String!\n\t) {\n\t\tcreateOrder(\n\t\t\ttoken: $token\n\t\t) {\n\t\t\tid \n\t\t\tcharge\n\t\t\ttotal\n\t\t\titems {\n\t\t\t\tid \n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const ORDER_QUERY = gql`\n\tquery ORDER_QUERY (\n    $id: ID!\n    ) {\n\t\torder(\n\t\t\tid: $id\n\t\t) {\n\t\t\tid\n\t\t\titems {\n\t\t\t\tid \n\t\t\t\ttitle\n\t\t\t\tdescription\n\t\t\t\tprice\n\t\t\t\timage\n\t\t\t\tquantity\n\t\t\t}\n\t\t\ttotal\n\t\t\tuser {\n\t\t\t\tid\n\t\t\t}\n\t\t\tcharge\n\t\t\tcreatedAt\n\t\t}\n\t}\n`;\n\nexport const ORDERS_QUERY = gql`\n\tquery ORDERS_QUERY {\n\t\torders(\n\t\t\tOrderBy: createdAt_DESC\n\t\t) {\n\t\t\tid\n\t\t\ttotal\n\t\t\tcreatedAt\n\t\t\titems {\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\tprice\n\t\t\t\tdescription\n\t\t\t\tquantity\n\t\t\t\timage\n\t\t\t}\n\t\t}\n\t}\n`;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAoBA;AAoBA;AAqBA;AAgBA;AAYA;AAUA;AAkBA;AAgBA;AAyBA;AAQA;AAkBA;AAYA;AAWA;AACA;AAiBA;AAMA;AAMA;AAaA;AAYA;AAoBA;AAkBA;AA0BA;;;;A","sourceRoot":""}