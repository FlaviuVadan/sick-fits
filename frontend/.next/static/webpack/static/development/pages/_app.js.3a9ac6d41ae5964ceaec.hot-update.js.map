{"version":3,"file":"static/webpack/static/development/pages/_app.js.3a9ac6d41ae5964ceaec.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["// a high order component that exposes the Apollo client via a prop\n// want server side rendering and next-with-apollo helps with that\nimport withApollo from 'next-with-apollo';\n\n// package by Apollo containing all the std things one may use\n// can extend what the Apollo client does and contains a lot of pre-configed things\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\n\nimport { LOCAL_STATE_QUERY } from \"../queries/queries\";\n\n// header important for authentication\nfunction createClient({ headers }) {\n\treturn new ApolloClient({\n\t\turi: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n\t\t// include credentials on every request, includes cookies\n\t\trequest: operation => {\n\t\t\toperation.setContext({\n\t\t\t\tfetchOptions: {\n\t\t\t\t\tcredentials: 'include',\n\t\t\t\t},\n\t\t\t\theaders,\n\t\t\t});\n\t\t},\n\t\t// local data\n\t\tclientState: {\n\t\t\tresolvers: {\n\t\t\t\tMutation: {\n\t\t\t\t\t// toggleCart will have one variable garbage collected\n\t\t\t\t\ttoggleCart(_, variables, { cache }) {\n\t\t\t\t\t\t// read cartOpen value from cache\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\tcartOpen: false\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AAJA;AADA;AAQA;AACA;AADA;AATA;AAZA;AA0BA;AACA;AACA;;;;A","sourceRoot":""}