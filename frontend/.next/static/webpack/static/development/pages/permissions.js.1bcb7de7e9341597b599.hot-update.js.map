{"version":3,"file":"static/webpack/static/development/pages/permissions.js.1bcb7de7e9341597b599.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport Error from './ErrorMessage';\nimport { ALL_USERS_QUERY } from \"../queries/queries\";\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\n\nconst PERMISSIONS = [\n\t'ADMIN',\n\t'USER',\n\t'ITEMCREATE',\n\t'ITEMUPDATE',\n\t'ITEMDELETE',\n\t'PERMISSIONUPDATE',\n];\n\nconst Permissions = props => (\n\t<Query query={ALL_USERS_QUERY}>\n\t\t{({ data, loading, error }) => (\n\t\t\t<div>\n\t\t\t\t<Error error={error}/>\n\t\t\t\t<div>\n\t\t\t\t\t<h2>Manage Permissions</h2>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Name</th>\n\t\t\t\t\t\t\t<th>Email</th>\n\t\t\t\t\t\t\t{PERMISSIONS.map(permission => <th key={permission}>{permission}</th>)}\n\t\t\t\t\t\t\t<th>Action</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>{data.users.map(user => <UserPermissions user={user} key={user.id}/>)}</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)}\n\t</Query>\n);\n\nclass UserPermissions extends Component {\n\tstatic propTypes = {\n\t\tuser: PropTypes.shape({\n\t\t\tname: PropTypes.string,\n\t\t\temail: PropTypes.string,\n\t\t\tid: PropTypes.string,\n\t\t\tpermissions: PropTypes.array,\n\t\t}).isRequired,\n\t};\n\n\t// part of component, can be updated via this.setState()\n\tstate = {\n\t\t// this is considered bad practice because props will not change the value of permissions\n\t\t// however, we are seeding the data here , update it later, and then send it with a mutation\n\t\tpermissions: this.props.user.permissions,\n\t};\n\n\t/**\n\t * Handle permission changes on the table\n\t * @param e - event\n\t */\n\thandlePermissionChange = e => {\n\t\tconst checkbox = e.target;\n\t\t// copy current permissions (deep copy)\n\t\tlet updatedPermissions = [...this.state.permissions];\n\n\t\tif (checkbox.checked) {\n\t\t\tupdatedPermissions.push(checkbox.value);\n\t\t} else {\n\t\t\tupdatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n\t\t}\n\t\tthis.setState({ permissions: updatedPermissions });\n\t};\n\n\trender() {\n\t\tconst user = this.props.user;\n\t\treturn (\n\t\t\t<tr>\n\t\t\t\t<td>{user.name}</td>\n\t\t\t\t<td>{user.email}</td>\n\t\t\t\t{PERMISSIONS.map(permission => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<td key={permission}>\n\t\t\t\t\t\t\t<label htmlFor={`${user.id}-permission-${permission}`}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tid={`${user.id}-permission-${permission}`}\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\tchecked={this.state.permissions.includes(permission)}\n\t\t\t\t\t\t\t\t\tvalue={permission}\n\t\t\t\t\t\t\t\t\tonChange={this.handlePermissionChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t<td><SickButton>Update</SickButton></td>\n\t\t\t</tr>\n\t\t)\n\t}\n}\n\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdA;AAFA;AACA;AAuBA;;;;;;;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AAHA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA1DA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AA2DA;;;;A","sourceRoot":""}